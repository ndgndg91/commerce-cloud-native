buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group = 'com.cloud.commerce'
    version = '0.0.1-SNAPSHOT'

    targetCompatibility = 11
    sourceCompatibility = 11
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }
}

project(":core-module") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        compile group: 'joda-time', name: 'joda-time', version: '2.10.6'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

    }
}

project(":account-service") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        compile project(":core-module")

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        runtimeOnly 'mysql:mysql-connector-java'
        runtimeOnly 'com.h2database:h2'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}

project(":product-service") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        compile project(":core-module")

        compile group: 'org.axonframework', name: 'axon-spring-boot-starter', version: '4.4.1'
        compile group: 'org.axonframework', name: 'axon-micrometer', version: '4.4.1'
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.72'
        runtime group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.72'
        compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.3'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        runtimeOnly 'com.h2database:h2'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}

project(":order-service") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar {
        from('./src/main/ebextensions') {
            into('.ebextensions')
        }
    }

    dependencies {
        compile project(":core-module")

        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        runtimeOnly 'mysql:mysql-connector-java'
        runtimeOnly 'com.h2database:h2'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}


